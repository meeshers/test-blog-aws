{"version":3,"sources":["pages/HomePage.js","pages/About.js","component/ArticleList.js","pages/ArticleContent.js","pages/ArticleListPage.js","component/CommentList.js","component/AddComment.js","component/UpvoteSection.js","pages/NotFound.js","pages/Article.js","component/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","About","className","ArticleList","articles","map","article","key","to","name","title","content","substring","ArticleListPage","articleContent","CommentList","comments","comment","username","text","AddComment","articleName","setArticleInfo","useState","setUsername","setComment","addComment","a","fetch","method","body","JSON","stringify","headers","result","json","id","type","value","onChange","event","target","rows","cols","onClick","UpvoteSection","upvotes","upvoteArticle","NotFound","Article","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","NavBar","App","Navbar","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74cac24e.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <>\n    <h1>Hello, welcome to the test blog</h1>\n    <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.\n    </p>\n  </>\n)\n\nexport default HomePage;","import React from 'react';\n\nconst About = () => (\n  <>\n  <div className=\"about\">\n    <h1>About</h1>\n    <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.\n    </p>\n    </div>\n  </>\n)\n\nexport default About;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst ArticleList = ({articles}) => {\n  return (\n    <div className=\"article\">\n      {articles.map((article, key) => (\n        <Link className='article-item' key={key} to={`/article/${article.name}`}>\n          <h3>{article.title}</h3>\n          <p>{article.content[0].substring(0, 300)}...</p>\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default ArticleList;","const articles = [\n  {\n    name: 'learn-react',\n    title: 'The fastest way to learn react',\n    content: [\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`,\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`,\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`\n    ]\n  },\n  {\n    name: 'learn-django',\n    title: 'The fastest way to learn django',\n    content: [\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`,\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`\n    ]\n  },\n  {\n    name: 'learn-node',\n    title: 'The fastest way to learn node',\n    content: [\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`,\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras pulvinar volutpat dictum. Pellentesque et aliquam elit, a ornare ante. Mauris quis aliquam mauris. Sed dictum elementum erat sit amet dignissim. Interdum et malesuada fames ac ante ipsum primis in faucibus. In iaculis sit amet erat non gravida. Sed et metus ac odio sagittis facilisis. Sed consequat velit nibh, id imperdiet neque sagittis sit amet. Quisque nec lacus pretium nulla egestas tempus. Aliquam erat volutpat. Integer nec magna lobortis, aliquet sapien ac, euismod magna. Phasellus vitae hendrerit turpis, sit amet dapibus dui. Fusce aliquet ligula varius condimentum fermentum. Integer et mi finibus, dapibus est vel, facilisis quam. Quisque non interdum orci. Nunc eu mollis libero, eget mattis nisl.`\n    ]\n  }\n]\n\nexport default articles;","import React from 'react';\nimport ArticleList from '../component/ArticleList'\nimport articleContent from './ArticleContent'\n\nconst ArticleListPage = () => {\n  return (\n    <>\n      <h1>All Articles</h1>\n      <ArticleList articles={articleContent} />\n    </>\n  )\n}\n\nexport default ArticleListPage;","import React from 'react';\n\nconst CommentList = ({comments}) =>(\n  <div className=\"comment-section\">\n  <h3>Comments</h3>\n  {comments.map((comment, key)=>(\n    \n    <div className=\"comment\" key={key}>\n      <h4>{comment.username}</h4>\n      <p>{comment.text}</p>\n    </div>\n  ))}\n  </div>\n)\n\nexport default CommentList;","import React, {useState } from 'react';\n\nconst AddComment = ({articleName, setArticleInfo}) => {\n  const [username, setUsername] = useState('');\n  const [comment, setComment] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'post',\n      body: JSON.stringify({username, text: comment}),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    const body = await result.json();\n    setArticleInfo(body);\n    setUsername('');\n    setComment('');\n  }\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3>Add a comment</h3>\n      <label>\n        Name:\n        <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n      </label>\n      <label>\n        Comment:\n        <textarea rows=\"4\" cols=\"50\" value={comment} onChange={(event) => setComment(event.target.value)} />\n      </label>\n      <button onClick={() => addComment()}>Add Comment</button>\n    </div>\n  )\n}\n\nexport default AddComment;","import React from 'react';\n\nconst UpvoteSection = ({articleName, upvotes, setArticleInfo }) => {\n  const upvoteArticle = async () =>{\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: 'post',\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n  }\n  return (\n    <div id=\"upvote-section\">\n      <button onClick={()=> upvoteArticle()}>Add Upvote</button>\n      <p>This post has been upvoted {upvotes} times.</p>\n    </div>\n  )\n}\n\nexport default UpvoteSection;","import React from 'react';\n\nconst NotFound = () => {\n  return(\n    <h1>Page not found!</h1>\n  )\n}\n\nexport default NotFound;","import React, { useState, useEffect } from 'react';\nimport articleContent from './ArticleContent';\nimport CommentList from '../component/CommentList';\nimport AddComment from '../component/AddComment';\nimport ArticleList from '../component/ArticleList';\nimport UpvoteSection from '../component/UpvoteSection';\nimport NotFound from './NotFound';\n\nconst Article = ({ match }) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    }\n    fetchData();\n  }, [name])\n\n  if (!article) return <NotFound />\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return (\n    <div className=\"article-content\">\n      <h1>{article.title}</h1>\n      <UpvoteSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      )\n      )}\n      <hr />\n      <CommentList comments={articleInfo.comments} />\n      <AddComment articleName={name} setArticleInfo={setArticleInfo} />\n      <hr />\n      <h3>Other articles you might be interested in...</h3>\n      <ArticleList articles={otherArticles} />\n    </div>\n  )\n}\n\nexport default Article;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NavBar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/articles\">Articles</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './sass/App.scss';\nimport HomePage from './pages/HomePage';\nimport About from './pages/About';\nimport ArticleListPage from './pages/ArticleListPage';\nimport Article from './pages/Article';\nimport Navbar from './component/Navbar';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/articles\" component={ArticleListPage} />\n            <Route path=\"/article/:name\" component={Article} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}